{"spaces":[{"id":0,"spaceId":"ntb-defs-0","name":"Block Space 0","width":600,"height":800,"defs":{"version":6,"height":800,"width":600,"blocks":[{"id":0,"action":" Setup ","isRequired":true,"placement":"starter","type":null,"format":"to setup\n  clear-all","isTerminal":true,"closeClauses":"\nreset-ticks","closeStarter":null,"limit":1,"note":null,"blockColor":null,"textColor":null,"borderColor":null,"font":null,"allowedTags":{"type":"unrestricted"},"tags":[],"clauses":[{"action":null,"open":" ","close":" ","allowedTags":{"type":"any-of","tags":["observer"]},"blocks":[]}],"params":[],"properties":[]},{"id":1,"action":" Go ","isRequired":true,"placement":"starter","type":null,"format":"to go\n  ask links [ set color gray ]","isTerminal":true,"closeClauses":"tick layout","closeStarter":null,"limit":1,"note":null,"blockColor":null,"textColor":null,"borderColor":null,"font":null,"allowedTags":{"type":"unrestricted"},"tags":[],"clauses":[{"action":null,"open":" ","close":" ","allowedTags":{"type":"any-of","tags":["observer"]},"blocks":[]}],"params":[],"properties":[]},{"id":2,"action":" Create a Node ","isRequired":false,"placement":"child","type":null,"format":"set partner nobody","isTerminal":false,"closeClauses":"make-node partner","closeStarter":null,"limit":0,"note":null,"blockColor":null,"textColor":null,"borderColor":null,"font":null,"allowedTags":{"type":"unrestricted"},"tags":["observer"],"clauses":[{"action":null,"open":" ","close":" ","allowedTags":{"type":"any-of","tags":["turtles"]},"blocks":[]}],"params":[],"properties":[]},{"id":8,"action":" Chance","isRequired":false,"placement":"child","type":null,"format":"if random-float 100 <= {0}","isTerminal":false,"closeClauses":null,"closeStarter":null,"limit":0,"note":null,"blockColor":null,"textColor":null,"borderColor":null,"font":null,"allowedTags":{"type":"unrestricted"},"tags":["observer","turtles"],"clauses":[{"action":null,"open":null,"close":null,"allowedTags":{"type":"inherit"},"blocks":[]}],"params":[{"name":"How probably?","unit":"","step":1,"random":false,"default":50,"type":"range","min":1,"max":100,"value":50}],"properties":[]},{"id":11,"action":" Repeat","isRequired":false,"placement":"child","type":null,"format":"repeat {0}","isTerminal":false,"closeClauses":null,"closeStarter":null,"limit":0,"note":null,"blockColor":null,"textColor":null,"borderColor":null,"font":null,"allowedTags":{"type":"unrestricted"},"tags":["observer","turtles"],"clauses":[{"action":null,"open":null,"close":null,"allowedTags":{"type":"inherit"},"blocks":[]}],"params":[{"name":"How probably?","unit":"","step":1,"random":false,"default":50,"type":"range","min":1,"max":100,"value":50,"def":50}],"properties":[]},{"id":15,"action":" If Any Links?","isRequired":false,"placement":"child","type":null,"format":"if any? links","isTerminal":false,"closeClauses":null,"closeStarter":null,"limit":0,"note":null,"blockColor":null,"textColor":null,"borderColor":null,"font":null,"allowedTags":{"type":"unrestricted"},"tags":["observer","turtles"],"clauses":[{"action":null,"open":null,"close":null,"allowedTags":{"type":"inherit"},"blocks":[]}],"params":[],"properties":[]},{"id":12,"action":" Connect to a Random Node","isRequired":false,"placement":"child","type":null,"format":"set partner one-of turtles","isTerminal":false,"closeClauses":null,"closeStarter":null,"limit":0,"note":null,"blockColor":null,"textColor":null,"borderColor":null,"font":null,"allowedTags":{"type":"unrestricted"},"tags":["turtles"],"clauses":[],"params":[],"properties":[]},{"id":14,"action":" Connect to a Random Link","isRequired":false,"placement":"child","type":null,"format":"ifelse any? links [\n  set partner [ one-of both-ends ] of one-of links\n] [ user-message \"Please create a link before trying to connect a node to it!\" ]","isTerminal":false,"closeClauses":null,"closeStarter":null,"limit":0,"note":null,"blockColor":null,"textColor":null,"borderColor":null,"font":null,"allowedTags":{"type":"unrestricted"},"tags":["turtles"],"clauses":[],"params":[],"properties":[]},{"id":13,"action":" Connect to Nobody","isRequired":false,"placement":"child","type":null,"format":"set partner nobody","isTerminal":false,"closeClauses":null,"closeStarter":null,"limit":0,"note":null,"blockColor":null,"textColor":null,"borderColor":null,"font":null,"allowedTags":{"type":"unrestricted"},"tags":["turtles"],"clauses":[],"params":[],"properties":[]}],"program":{"chains":[{"x":20.199951171875,"y":17.399993896484375,"blocks":[{"definitionId":0,"instanceId":0,"clauses":[{"blocks":[{"definitionId":2,"instanceId":0,"clauses":[{"blocks":[{"definitionId":13,"instanceId":0,"clauses":[],"params":[],"properties":[],"propertiesDisplay":"shown"}]}],"params":[],"properties":[],"propertiesDisplay":"shown"},{"definitionId":2,"instanceId":2,"clauses":[{"blocks":[{"definitionId":12,"instanceId":1,"clauses":[],"params":[],"properties":[],"propertiesDisplay":"shown"}]}],"params":[],"properties":[],"propertiesDisplay":"shown"}]}],"params":[],"properties":[],"propertiesDisplay":"shown"}]},{"x":18,"y":257.4000244140625,"blocks":[{"definitionId":1,"instanceId":0,"clauses":[{"blocks":[]}],"params":[],"properties":[],"propertiesDisplay":"shown"}]}]},"chainOpen":null,"chainClose":null,"variables":[],"expressions":[{"name":"true","type":"bool","arguments":[],"format":null},{"name":"false","type":"bool","arguments":[],"format":null},{"name":"AND","type":"bool","arguments":["bool","bool"],"format":"({0} and {1})"},{"name":"OR","type":"bool","arguments":["bool","bool"],"format":"({0} or {1})"},{"name":"NOT","type":"bool","arguments":["bool"],"format":"(not {0})"},{"name":">","type":"bool","arguments":["num","num"],"format":null},{"name":">=","type":"bool","arguments":["num","num"],"format":null},{"name":"<","type":"bool","arguments":["num","num"],"format":null},{"name":"<=","type":"bool","arguments":["num","num"],"format":null},{"name":"!=","type":"bool","arguments":["num","num"],"format":null},{"name":"=","type":"bool","arguments":["num","num"],"format":null},{"name":"+","type":"num","arguments":["num","num"],"format":null},{"name":"-","type":"num","arguments":["num","num"],"format":null},{"name":"×","type":"num","arguments":["num","num"],"format":"({0} * {1})"},{"name":"/","type":"num","arguments":["num","num"],"format":null},{"name":"random","type":"num","arguments":["num"],"format":"random-float {0}"}]},"netLogoCode":"to go\n  ask links [ set color gray ]\ntick layout\nend\n\nto setup\n  clear-all\n  set partner nobody\n    set partner nobody\n  make-node partner\n  set partner nobody\n    set partner one-of turtles\n  make-node partner\n\nreset-ticks\nend","netLogoDisplay":"to go\n  ask links [ set color gray ]\ntick layout\nend\n\nto setup\n  clear-all\n  set partner nobody\n    set partner nobody\n  make-node partner\n  set partner nobody\n    set partner one-of turtles\n  make-node partner\n\nreset-ticks\nend"}],"netTangoToggles":{"workspaceBelow":true,"showCode":true},"tabOptions":{"commandCenterTab":true,"codeTab":false,"infoTab":true,"speedBar":false,"fileButtons":true,"authoring":true,"tabsPosition":true,"poweredBy":false},"blockStyles":{"starterBlockStyle":{"blockColor":"#bb5555","textColor":"#ffffff","borderColor":"#ffffff","fontWeight":"","fontSize":"","fontFace":""},"containerBlockStyle":{"blockColor":"#8899aa","textColor":"#ffffff","borderColor":"#ffffff","fontWeight":"","fontSize":"","fontFace":""},"commandBlockStyle":{"blockColor":"#9977aa","textColor":"#ffffff","borderColor":"#ffffff","fontWeight":"","fontSize":"","fontFace":""}},"title":"Preferential Attachment","extraCss":"@font-face {\n  font-family: IcoFont;\n  font-weight: 400;\n  font-style: Regular;\n  src: url(//netlogo-mobile.github.io/Tutorial-Editor/fonts/icofont.woff2) format('woff2'),\n    url(//netlogo-mobile.github.io/Tutorial-Editor/fonts/icofont.woff) format('woff');\n}\n\n* {\n  font-family: Consolas, IcoFont, monospace;\n}","code":"globals [ partner ]\n\n;; used for creating a new node\nto make-node [old-node]\n  create-turtles 1\n  [\n    set color red\n    if old-node != nobody\n      [ create-link-with old-node [ set color green ]\n        ;; position the new node near its partner\n        move-to old-node\n        fd 8\n      ]\n  ]\nend\n\n;; used to create layout\nto layout\n  ;; the number 3 here is arbitrary; more repetitions slows down the\n  ;; model, but too few gives poor layouts\n  repeat 5 [\n    ;; the more turtles we have to fit into the same amount of space,\n    ;; the smaller the inputs to layout-spring we'll need to use\n    let factor sqrt count turtles\n    ;; numbers here are arbitrarily chosen for pleasing appearance\n    layout-spring turtles links (1 / factor) (7 / factor) (1 / factor)\n    display  ;; for smooth animation\n  ]\n  ;; don't bump the edges of the world\n  let x-offset max [xcor] of turtles + min [xcor] of turtles\n  let y-offset max [ycor] of turtles + min [ycor] of turtles\n  ;; big jumps look funny, so only adjust a little each time\n  set x-offset limit-magnitude x-offset 0.1\n  set y-offset limit-magnitude y-offset 0.1\n  ask turtles [\n    setxy (xcor - x-offset / 2) (ycor - y-offset / 2)\n    set size sqrt count link-neighbors\n  ]\nend\n\nto-report limit-magnitude [number limit]\n  if number > limit [ report limit ]\n  if number < (- limit) [ report (- limit) ]\n  report number\nend\n\n; Copyright 2005 Uri Wilensky.\n; See Info tab for full copyright and license.\n; --- NETTANGO BEGIN ---\n\n; This block of code was added by the NetTango builder.  If you modify this code\n; and re-import it into the NetTango builder you may lose your changes or need\n; to resolve some errors manually.\n\n; If you do not plan to re-import the model into the NetTango builder then you\n; can safely edit this code however you want, just like a normal NetLogo model.\n\n; Code for Block Space 0\nto go\n  ask links [ set color gray ]\ntick layout\nend\n\nto setup\n  clear-all\n  set partner nobody\n    set partner nobody\n  make-node partner\n  set partner nobody\n    set partner one-of turtles\n  make-node partner\n\nreset-ticks\nend\n; --- NETTANGO END ---\n@#$#@#$#@\nGRAPHICS-WINDOW\n345\n10\n800\n465\n-1\n-1\n5\n1\n10\n1\n1\n1\n0\n0\n0\n1\n-45\n45\n-45\n45\n1\n1\n1\nticks\n60\n\nPLOT\n5\n74\n330\n250\nDegree Distribution\ndegree\n# of nodes\n1\n10\n0\n10\ntrue\nfalse\n\"\" \"\"\nPENS\n\"default\" 1 1 -16777216 true \"\" \"if not any? links [ stop ]\\nlet max-degree max [count link-neighbors] of turtles\\nplot-pen-reset  ;; erase what we plotted before\\nset-plot-x-range 1 (max-degree + 1)  ;; + 1 to make room for the width of the last bar\\nhistogram [count link-neighbors] of turtles\"\n\nBUTTON\n6\n25\n72\n58\nNIL\nsetup\nNIL\n1\nT\nOBSERVER\nNIL\nNIL\nNIL\nNIL\n1\n\nBUTTON\n157\n25\n234\n58\nNIL\ngo\nT\n1\nT\nOBSERVER\nNIL\nNIL\nNIL\nNIL\n0\n\nBUTTON\n72\n25\n157\n58\ngo-once\ngo\nNIL\n1\nT\nOBSERVER\nNIL\nNIL\nNIL\nNIL\n0\n\nMONITOR\n250\n20\n329\n65\n# of nodes\ncount turtles\n3\n1\n11\n@#$#@#$#@\n## WHAT IS IT?\n\nIn some networks, a few \"hubs\" have lots of connections, while everybody else only has a few.  This model shows one way such networks can arise.\n\nSuch networks can be found in a surprisingly large range of real world situations, ranging from the connections between websites to the collaborations between actors.\n\nThis model generates these networks by a process of \"preferential attachment\", in which new network members prefer to make a connection to the more popular existing members.\n\n## HOW IT WORKS\n\nThe model starts with two nodes connected by an edge.\n\nAt each step, a new node is added.  A new node picks an existing node to connect to randomly, but with some bias.  More specifically, a node's chance of being selected is directly proportional to the number of connections it already has, or its \"degree.\" This is the mechanism which is called \"preferential attachment.\"\n\n## HOW TO USE IT\n\nPressing the GO ONCE button adds one new node.  To continuously add nodes, press GO.\n\nThe LAYOUT? switch controls whether or not the layout procedure is run.  This procedure attempts to move the nodes around to make the structure of the network easier to see.\n\nThe PLOT? switch turns off the plots which speeds up the model.\n\nThe RESIZE-NODES button will make all of the nodes take on a size representative of their degree distribution.  If you press it again the nodes will return to equal size.\n\nIf you want the model to run faster, you can turn off the LAYOUT? and PLOT? switches and/or freeze the view (using the on/off button in the control strip over the view). The LAYOUT? switch has the greatest effect on the speed of the model.\n\nIf you have LAYOUT? switched off, and then want the network to have a more appealing layout, press the REDO-LAYOUT button which will run the layout-step procedure until you press the button again. You can press REDO-LAYOUT at any time even if you had LAYOUT? switched on and it will try to make the network easier to see.\n\n## THINGS TO NOTICE\n\nThe networks that result from running this model are often called \"scale-free\" or \"power law\" networks. These are networks in which the distribution of the number of connections of each node is not a normal distribution --- instead it follows what is a called a power law distribution.  Power law distributions are different from normal distributions in that they do not have a peak at the average, and they are more likely to contain extreme values (see Albert & Barabási 2002 for a further description of the frequency and significance of scale-free networks).  Barabási and Albert originally described this mechanism for creating networks, but there are other mechanisms of creating scale-free networks and so the networks created by the mechanism implemented in this model are referred to as Barabási scale-free networks.\n\nYou can see the degree distribution of the network in this model by looking at the plots. The top plot is a histogram of the degree of each node.  The bottom plot shows the same data, but both axes are on a logarithmic scale.  When degree distribution follows a power law, it appears as a straight line on the log-log plot.  One simple way to think about power laws is that if there is one node with a degree distribution of 1000, then there will be ten nodes with a degree distribution of 100, and 100 nodes with a degree distribution of 10.\n\n## THINGS TO TRY\n\nLet the model run a little while.  How many nodes are \"hubs\", that is, have many connections?  How many have only a few?  Does some low degree node ever become a hub?  How often?\n\nTurn off the LAYOUT? switch and freeze the view to speed up the model, then allow a large network to form.  What is the shape of the histogram in the top plot?  What do you see in log-log plot? Notice that the log-log plot is only a straight line for a limited range of values.  Why is this?  Does the degree to which the log-log plot resembles a straight line grow as you add more nodes to the network?\n\n## EXTENDING THE MODEL\n\nAssign an additional attribute to each node.  Make the probability of attachment depend on this new attribute as well as on degree.  (A bias slider could control how much the attribute influences the decision.)\n\nCan the layout algorithm be improved?  Perhaps nodes from different hubs could repel each other more strongly than nodes from the same hub, in order to encourage the hubs to be physically separate in the layout.\n\n## NETWORK CONCEPTS\n\nThere are many ways to graphically display networks.  This model uses a common \"spring\" method where the movement of a node at each time step is the net result of \"spring\" forces that pulls connected nodes together and repulsion forces that push all the nodes away from each other.  This code is in the `layout-step` procedure. You can force this code to execute any time by pressing the REDO LAYOUT button, and pressing it again when you are happy with the layout.\n\n## NETLOGO FEATURES\n\nNodes are turtle agents and edges are link agents. The model uses the ONE-OF primitive to chose a random link and the BOTH-ENDS primitive to select the two nodes attached to that link.\n\nThe `layout-spring` primitive places the nodes, as if the edges are springs and the nodes are repelling each other.\n\nThough it is not used in this model, there exists a network extension for NetLogo that comes bundled with NetLogo, that has many more network primitives.\n\n## RELATED MODELS\n\nSee other models in the Networks section of the Models Library, such as Giant Component.\n\nSee also Network Example, in the Code Examples section.\n\n## CREDITS AND REFERENCES\n\nThis model is based on:\nAlbert-László Barabási. Linked: The New Science of Networks, Perseus Publishing, Cambridge, Massachusetts, pages 79-92.\n\nFor a more technical treatment, see:\nAlbert-László Barabási & Reka Albert. Emergence of Scaling in Random Networks, Science, Vol 286, Issue 5439, 15 October 1999, pages 509-512.\n\nBarabási's webpage has additional information at: https://www.barabasi.com/\n\nThe layout algorithm is based on the Fruchterman-Reingold layout algorithm.  More information about this algorithm can be obtained at: http://cs.brown.edu/people/rtamassi/gdhandbook/chapters/force-directed.pdf.\n\nFor a model similar to the one described in the first suggested extension, please consult:\nW. Brian Arthur, \"Urban Systems and Historical Path-Dependence\", Chapt. 4 in Urban systems and Infrastructure, J. Ausubel and R. Herman (eds.), National Academy of Sciences, Washington, D.C., 1988.\n\n## HOW TO CITE\n\nIf you mention this model or the NetLogo software in a publication, we ask that you include the citations below.\n\nFor the model itself:\n\n* Wilensky, U. (2005).  NetLogo Preferential Attachment model.  http://ccl.northwestern.edu/netlogo/models/PreferentialAttachment.  Center for Connected Learning and Computer-Based Modeling, Northwestern University, Evanston, IL.\n\nPlease cite the NetLogo software as:\n\n* Wilensky, U. (1999). NetLogo. http://ccl.northwestern.edu/netlogo/. Center for Connected Learning and Computer-Based Modeling, Northwestern University, Evanston, IL.\n\n## COPYRIGHT AND LICENSE\n\nCopyright 2005 Uri Wilensky.\n\n![CC BY-NC-SA 3.0](http://ccl.northwestern.edu/images/creativecommons/byncsa.png)\n\nThis work is licensed under the Creative Commons Attribution-NonCommercial-ShareAlike 3.0 License.  To view a copy of this license, visit https://creativecommons.org/licenses/by-nc-sa/3.0/ or send a letter to Creative Commons, 559 Nathan Abbott Way, Stanford, California 94305, USA.\n\nCommercial licenses are also available. To inquire about commercial licenses, please contact Uri Wilensky at uri@northwestern.edu.\n\n<!-- 2005 -->\n@#$#@#$#@\ndefault\ntrue\n0\nPolygon -7500403 true true 150 5 40 250 150 205 260 250\n\nairplane\ntrue\n0\nPolygon -7500403 true true 150 0 135 15 120 60 120 105 15 165 15 195 120 180 135 240 105 270 120 285 150 270 180 285 210 270 165 240 180 180 285 195 285 165 180 105 180 60 165 15\n\narrow\ntrue\n0\nPolygon -7500403 true true 150 0 0 150 105 150 105 293 195 293 195 150 300 150\n\nbox\nfalse\n0\nPolygon -7500403 true true 150 285 285 225 285 75 150 135\nPolygon -7500403 true true 150 135 15 75 150 15 285 75\nPolygon -7500403 true true 15 75 15 225 150 285 150 135\nLine -16777216 false 150 285 150 135\nLine -16777216 false 150 135 15 75\nLine -16777216 false 150 135 285 75\n\nbug\ntrue\n0\nCircle -7500403 true true 96 182 108\nCircle -7500403 true true 110 127 80\nCircle -7500403 true true 110 75 80\nLine -7500403 true 150 100 80 30\nLine -7500403 true 150 100 220 30\n\nbutterfly\ntrue\n0\nPolygon -7500403 true true 150 165 209 199 225 225 225 255 195 270 165 255 150 240\nPolygon -7500403 true true 150 165 89 198 75 225 75 255 105 270 135 255 150 240\nPolygon -7500403 true true 139 148 100 105 55 90 25 90 10 105 10 135 25 180 40 195 85 194 139 163\nPolygon -7500403 true true 162 150 200 105 245 90 275 90 290 105 290 135 275 180 260 195 215 195 162 165\nPolygon -16777216 true false 150 255 135 225 120 150 135 120 150 105 165 120 180 150 165 225\nCircle -16777216 true false 135 90 30\nLine -16777216 false 150 105 195 60\nLine -16777216 false 150 105 105 60\n\ncar\nfalse\n0\nPolygon -7500403 true true 300 180 279 164 261 144 240 135 226 132 213 106 203 84 185 63 159 50 135 50 75 60 0 150 0 165 0 225 300 225 300 180\nCircle -16777216 true false 180 180 90\nCircle -16777216 true false 30 180 90\nPolygon -16777216 true false 162 80 132 78 134 135 209 135 194 105 189 96 180 89\nCircle -7500403 true true 47 195 58\nCircle -7500403 true true 195 195 58\n\ncircle\nfalse\n0\nCircle -7500403 true true 0 0 300\n\ncircle 2\nfalse\n0\nCircle -7500403 true true 0 0 300\nCircle -16777216 true false 30 30 240\n\ncow\nfalse\n0\nPolygon -7500403 true true 200 193 197 249 179 249 177 196 166 187 140 189 93 191 78 179 72 211 49 209 48 181 37 149 25 120 25 89 45 72 103 84 179 75 198 76 252 64 272 81 293 103 285 121 255 121 242 118 224 167\nPolygon -7500403 true true 73 210 86 251 62 249 48 208\nPolygon -7500403 true true 25 114 16 195 9 204 23 213 25 200 39 123\n\ncylinder\nfalse\n0\nCircle -7500403 true true 0 0 300\n\ndot\nfalse\n0\nCircle -7500403 true true 90 90 120\n\nface happy\nfalse\n0\nCircle -7500403 true true 8 8 285\nCircle -16777216 true false 60 75 60\nCircle -16777216 true false 180 75 60\nPolygon -16777216 true false 150 255 90 239 62 213 47 191 67 179 90 203 109 218 150 225 192 218 210 203 227 181 251 194 236 217 212 240\n\nface neutral\nfalse\n0\nCircle -7500403 true true 8 7 285\nCircle -16777216 true false 60 75 60\nCircle -16777216 true false 180 75 60\nRectangle -16777216 true false 60 195 240 225\n\nface sad\nfalse\n0\nCircle -7500403 true true 8 8 285\nCircle -16777216 true false 60 75 60\nCircle -16777216 true false 180 75 60\nPolygon -16777216 true false 150 168 90 184 62 210 47 232 67 244 90 220 109 205 150 198 192 205 210 220 227 242 251 229 236 206 212 183\n\nfish\nfalse\n0\nPolygon -1 true false 44 131 21 87 15 86 0 120 15 150 0 180 13 214 20 212 45 166\nPolygon -1 true false 135 195 119 235 95 218 76 210 46 204 60 165\nPolygon -1 true false 75 45 83 77 71 103 86 114 166 78 135 60\nPolygon -7500403 true true 30 136 151 77 226 81 280 119 292 146 292 160 287 170 270 195 195 210 151 212 30 166\nCircle -16777216 true false 215 106 30\n\nflag\nfalse\n0\nRectangle -7500403 true true 60 15 75 300\nPolygon -7500403 true true 90 150 270 90 90 30\nLine -7500403 true 75 135 90 135\nLine -7500403 true 75 45 90 45\n\nflower\nfalse\n0\nPolygon -10899396 true false 135 120 165 165 180 210 180 240 150 300 165 300 195 240 195 195 165 135\nCircle -7500403 true true 85 132 38\nCircle -7500403 true true 130 147 38\nCircle -7500403 true true 192 85 38\nCircle -7500403 true true 85 40 38\nCircle -7500403 true true 177 40 38\nCircle -7500403 true true 177 132 38\nCircle -7500403 true true 70 85 38\nCircle -7500403 true true 130 25 38\nCircle -7500403 true true 96 51 108\nCircle -16777216 true false 113 68 74\nPolygon -10899396 true false 189 233 219 188 249 173 279 188 234 218\nPolygon -10899396 true false 180 255 150 210 105 210 75 240 135 240\n\nhouse\nfalse\n0\nRectangle -7500403 true true 45 120 255 285\nRectangle -16777216 true false 120 210 180 285\nPolygon -7500403 true true 15 120 150 15 285 120\nLine -16777216 false 30 120 270 120\n\nleaf\nfalse\n0\nPolygon -7500403 true true 150 210 135 195 120 210 60 210 30 195 60 180 60 165 15 135 30 120 15 105 40 104 45 90 60 90 90 105 105 120 120 120 105 60 120 60 135 30 150 15 165 30 180 60 195 60 180 120 195 120 210 105 240 90 255 90 263 104 285 105 270 120 285 135 240 165 240 180 270 195 240 210 180 210 165 195\nPolygon -7500403 true true 135 195 135 240 120 255 105 255 105 285 135 285 165 240 165 195\n\nline\ntrue\n0\nLine -7500403 true 150 0 150 300\n\nline half\ntrue\n0\nLine -7500403 true 150 0 150 150\n\npentagon\nfalse\n0\nPolygon -7500403 true true 150 15 15 120 60 285 240 285 285 120\n\nperson\nfalse\n0\nCircle -7500403 true true 110 5 80\nPolygon -7500403 true true 105 90 120 195 90 285 105 300 135 300 150 225 165 300 195 300 210 285 180 195 195 90\nRectangle -7500403 true true 127 79 172 94\nPolygon -7500403 true true 195 90 240 150 225 180 165 105\nPolygon -7500403 true true 105 90 60 150 75 180 135 105\n\nplant\nfalse\n0\nRectangle -7500403 true true 135 90 165 300\nPolygon -7500403 true true 135 255 90 210 45 195 75 255 135 285\nPolygon -7500403 true true 165 255 210 210 255 195 225 255 165 285\nPolygon -7500403 true true 135 180 90 135 45 120 75 180 135 210\nPolygon -7500403 true true 165 180 165 210 225 180 255 120 210 135\nPolygon -7500403 true true 135 105 90 60 45 45 75 105 135 135\nPolygon -7500403 true true 165 105 165 135 225 105 255 45 210 60\nPolygon -7500403 true true 135 90 120 45 150 15 180 45 165 90\n\nsquare\nfalse\n0\nRectangle -7500403 true true 30 30 270 270\n\nsquare 2\nfalse\n0\nRectangle -7500403 true true 30 30 270 270\nRectangle -16777216 true false 60 60 240 240\n\nstar\nfalse\n0\nPolygon -7500403 true true 151 1 185 108 298 108 207 175 242 282 151 216 59 282 94 175 3 108 116 108\n\ntarget\nfalse\n0\nCircle -7500403 true true 0 0 300\nCircle -16777216 true false 30 30 240\nCircle -7500403 true true 60 60 180\nCircle -16777216 true false 90 90 120\nCircle -7500403 true true 120 120 60\n\ntree\nfalse\n0\nCircle -7500403 true true 118 3 94\nRectangle -6459832 true false 120 195 180 300\nCircle -7500403 true true 65 21 108\nCircle -7500403 true true 116 41 127\nCircle -7500403 true true 45 90 120\nCircle -7500403 true true 104 74 152\n\ntriangle\nfalse\n0\nPolygon -7500403 true true 150 30 15 255 285 255\n\ntriangle 2\nfalse\n0\nPolygon -7500403 true true 150 30 15 255 285 255\nPolygon -16777216 true false 151 99 225 223 75 224\n\ntruck\nfalse\n0\nRectangle -7500403 true true 4 45 195 187\nPolygon -7500403 true true 296 193 296 150 259 134 244 104 208 104 207 194\nRectangle -1 true false 195 60 195 105\nPolygon -16777216 true false 238 112 252 141 219 141 218 112\nCircle -16777216 true false 234 174 42\nRectangle -7500403 true true 181 185 214 194\nCircle -16777216 true false 144 174 42\nCircle -16777216 true false 24 174 42\nCircle -7500403 false true 24 174 42\nCircle -7500403 false true 144 174 42\nCircle -7500403 false true 234 174 42\n\nturtle\ntrue\n0\nPolygon -10899396 true false 215 204 240 233 246 254 228 266 215 252 193 210\nPolygon -10899396 true false 195 90 225 75 245 75 260 89 269 108 261 124 240 105 225 105 210 105\nPolygon -10899396 true false 105 90 75 75 55 75 40 89 31 108 39 124 60 105 75 105 90 105\nPolygon -10899396 true false 132 85 134 64 107 51 108 17 150 2 192 18 192 52 169 65 172 87\nPolygon -10899396 true false 85 204 60 233 54 254 72 266 85 252 107 210\nPolygon -7500403 true true 119 75 179 75 209 101 224 135 220 225 175 261 128 261 81 224 74 135 88 99\n\nwheel\nfalse\n0\nCircle -7500403 true true 3 3 294\nCircle -16777216 true false 30 30 240\nLine -7500403 true 150 285 150 15\nLine -7500403 true 15 150 285 150\nCircle -7500403 true true 120 120 60\nLine -7500403 true 216 40 79 269\nLine -7500403 true 40 84 269 221\nLine -7500403 true 40 216 269 79\nLine -7500403 true 84 40 221 269\n\nx\nfalse\n0\nPolygon -7500403 true true 270 75 225 30 30 225 75 270\nPolygon -7500403 true true 30 75 75 30 270 225 225 270\n@#$#@#$#@\nNetLogo 6.2.0\n@#$#@#$#@\n@#$#@#$#@\n@#$#@#$#@\n@#$#@#$#@\n@#$#@#$#@\ndefault\n0\n-0.2 0 0 1\n0 1 1 0\n0.2 0 0 1\nlink direction\ntrue\n0\nLine -7500403 true 150 150 90 180\nLine -7500403 true 150 150 210 180\n@#$#@#$#@\n\n@#$#@#$#@\n","netLogoSettings":{"isVertical":true}}